type Query {
  info: String!
  feed: [Link!]!
  findLink(id: ID!): Link
  allUsers: [User!]!
}

type Mutation {
  post(url: String!, description: String!): Link!
  updateLink(id: ID!, description: String!): Link
  deleteLink(id: ID!): Link!
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  deleteUser(id: ID!): User
  vote(linkId: ID!): Vote
}

type Subscription {
  newLink: Link
  newVote: Vote
}

type User {
  id: ID!
  name: String!
  email: String!
  links: [Link!]!
}

type Link {
  id: ID!
  description: String!
  url: String!
  postedBy: User
  votes: [Vote!]!
}

type AuthPayload {
  token: String
  user: User
}

type Vote {
  id: ID!
  link: Link!
  user: User!
}
